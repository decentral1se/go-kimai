// Code generated by go-swagger; DO NOT EDIT.

package timesheet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAPITimesheetsParams creates a new GetAPITimesheetsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAPITimesheetsParams() *GetAPITimesheetsParams {
	return &GetAPITimesheetsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAPITimesheetsParamsWithTimeout creates a new GetAPITimesheetsParams object
// with the ability to set a timeout on a request.
func NewGetAPITimesheetsParamsWithTimeout(timeout time.Duration) *GetAPITimesheetsParams {
	return &GetAPITimesheetsParams{
		timeout: timeout,
	}
}

// NewGetAPITimesheetsParamsWithContext creates a new GetAPITimesheetsParams object
// with the ability to set a context for a request.
func NewGetAPITimesheetsParamsWithContext(ctx context.Context) *GetAPITimesheetsParams {
	return &GetAPITimesheetsParams{
		Context: ctx,
	}
}

// NewGetAPITimesheetsParamsWithHTTPClient creates a new GetAPITimesheetsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAPITimesheetsParamsWithHTTPClient(client *http.Client) *GetAPITimesheetsParams {
	return &GetAPITimesheetsParams{
		HTTPClient: client,
	}
}

/*
GetAPITimesheetsParams contains all the parameters to send to the API endpoint

	for the get API timesheets operation.

	Typically these are written to a http.Request.
*/
type GetAPITimesheetsParams struct {

	/* Active.

	   Filter for running/active records. Allowed values: 0=stopped, 1=active (default: all)
	*/
	Active string

	/* Activities.

	   Comma separated list of activity IDs to filter timesheets
	*/
	Activities string

	/* Activity.

	   DEPRECATED: Activity ID to filter timesheets (will be removed with 2.0)
	*/
	Activity string

	/* Begin.

	   Only records after this date will be included (format: HTML5)

	   Format: DateTime
	*/
	Begin string

	/* Billable.

	   Filter for non-/billable records. Allowed values: 0=non-billable, 1=billable (default: all)
	*/
	Billable string

	/* Customer.

	   DEPRECATED: Customer ID to filter timesheets (will be removed with 2.0)
	*/
	Customer string

	/* Customers.

	   Comma separated list of customer IDs to filter timesheets
	*/
	Customers string

	/* End.

	   Only records before this date will be included (format: HTML5)

	   Format: DateTime
	*/
	End string

	/* Exported.

	   Use this flag if you want to filter for export state. Allowed values: 0=not exported, 1=exported (default: all)
	*/
	Exported string

	/* Full.

	   Allows to fetch fully serialized objects including subresources. Allowed values: true (default: false)
	*/
	Full string

	/* ModifiedAfter.

	   Only records changed after this date will be included (format: HTML5). Available since Kimai 1.10 and works only for records that were created/updated since then.

	   Format: DateTime
	*/
	ModifiedAfter string

	/* Order.

	   The result order. Allowed values: ASC, DESC (default: DESC)
	*/
	Order string

	/* OrderBy.

	   The field by which results will be ordered. Allowed values: id, begin, end, rate (default: begin)
	*/
	OrderBy string

	/* Page.

	   The page to display, renders a 404 if not found (default: 1)
	*/
	Page string

	/* Project.

	   DEPRECATED: Project ID to filter timesheets (will be removed with 2.0)
	*/
	Project string

	/* Projects.

	   Comma separated list of project IDs to filter timesheets
	*/
	Projects string

	/* Size.

	   The amount of entries for each page (default: 50)
	*/
	Size string

	/* Tags.

	   Comma separated list of tag names
	*/
	Tags string

	/* Term.

	   Free search term
	*/
	Term *string

	/* User.

	   User ID to filter timesheets. Needs permission 'view_other_timesheet', pass 'all' to fetch data for all user (default: current user)
	*/
	User string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get API timesheets params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPITimesheetsParams) WithDefaults() *GetAPITimesheetsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get API timesheets params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAPITimesheetsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get API timesheets params
func (o *GetAPITimesheetsParams) WithTimeout(timeout time.Duration) *GetAPITimesheetsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get API timesheets params
func (o *GetAPITimesheetsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get API timesheets params
func (o *GetAPITimesheetsParams) WithContext(ctx context.Context) *GetAPITimesheetsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get API timesheets params
func (o *GetAPITimesheetsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get API timesheets params
func (o *GetAPITimesheetsParams) WithHTTPClient(client *http.Client) *GetAPITimesheetsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get API timesheets params
func (o *GetAPITimesheetsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActive adds the active to the get API timesheets params
func (o *GetAPITimesheetsParams) WithActive(active string) *GetAPITimesheetsParams {
	o.SetActive(active)
	return o
}

// SetActive adds the active to the get API timesheets params
func (o *GetAPITimesheetsParams) SetActive(active string) {
	o.Active = active
}

// WithActivities adds the activities to the get API timesheets params
func (o *GetAPITimesheetsParams) WithActivities(activities string) *GetAPITimesheetsParams {
	o.SetActivities(activities)
	return o
}

// SetActivities adds the activities to the get API timesheets params
func (o *GetAPITimesheetsParams) SetActivities(activities string) {
	o.Activities = activities
}

// WithActivity adds the activity to the get API timesheets params
func (o *GetAPITimesheetsParams) WithActivity(activity string) *GetAPITimesheetsParams {
	o.SetActivity(activity)
	return o
}

// SetActivity adds the activity to the get API timesheets params
func (o *GetAPITimesheetsParams) SetActivity(activity string) {
	o.Activity = activity
}

// WithBegin adds the begin to the get API timesheets params
func (o *GetAPITimesheetsParams) WithBegin(begin string) *GetAPITimesheetsParams {
	o.SetBegin(begin)
	return o
}

// SetBegin adds the begin to the get API timesheets params
func (o *GetAPITimesheetsParams) SetBegin(begin string) {
	o.Begin = begin
}

// WithBillable adds the billable to the get API timesheets params
func (o *GetAPITimesheetsParams) WithBillable(billable string) *GetAPITimesheetsParams {
	o.SetBillable(billable)
	return o
}

// SetBillable adds the billable to the get API timesheets params
func (o *GetAPITimesheetsParams) SetBillable(billable string) {
	o.Billable = billable
}

// WithCustomer adds the customer to the get API timesheets params
func (o *GetAPITimesheetsParams) WithCustomer(customer string) *GetAPITimesheetsParams {
	o.SetCustomer(customer)
	return o
}

// SetCustomer adds the customer to the get API timesheets params
func (o *GetAPITimesheetsParams) SetCustomer(customer string) {
	o.Customer = customer
}

// WithCustomers adds the customers to the get API timesheets params
func (o *GetAPITimesheetsParams) WithCustomers(customers string) *GetAPITimesheetsParams {
	o.SetCustomers(customers)
	return o
}

// SetCustomers adds the customers to the get API timesheets params
func (o *GetAPITimesheetsParams) SetCustomers(customers string) {
	o.Customers = customers
}

// WithEnd adds the end to the get API timesheets params
func (o *GetAPITimesheetsParams) WithEnd(end string) *GetAPITimesheetsParams {
	o.SetEnd(end)
	return o
}

// SetEnd adds the end to the get API timesheets params
func (o *GetAPITimesheetsParams) SetEnd(end string) {
	o.End = end
}

// WithExported adds the exported to the get API timesheets params
func (o *GetAPITimesheetsParams) WithExported(exported string) *GetAPITimesheetsParams {
	o.SetExported(exported)
	return o
}

// SetExported adds the exported to the get API timesheets params
func (o *GetAPITimesheetsParams) SetExported(exported string) {
	o.Exported = exported
}

// WithFull adds the full to the get API timesheets params
func (o *GetAPITimesheetsParams) WithFull(full string) *GetAPITimesheetsParams {
	o.SetFull(full)
	return o
}

// SetFull adds the full to the get API timesheets params
func (o *GetAPITimesheetsParams) SetFull(full string) {
	o.Full = full
}

// WithModifiedAfter adds the modifiedAfter to the get API timesheets params
func (o *GetAPITimesheetsParams) WithModifiedAfter(modifiedAfter string) *GetAPITimesheetsParams {
	o.SetModifiedAfter(modifiedAfter)
	return o
}

// SetModifiedAfter adds the modifiedAfter to the get API timesheets params
func (o *GetAPITimesheetsParams) SetModifiedAfter(modifiedAfter string) {
	o.ModifiedAfter = modifiedAfter
}

// WithOrder adds the order to the get API timesheets params
func (o *GetAPITimesheetsParams) WithOrder(order string) *GetAPITimesheetsParams {
	o.SetOrder(order)
	return o
}

// SetOrder adds the order to the get API timesheets params
func (o *GetAPITimesheetsParams) SetOrder(order string) {
	o.Order = order
}

// WithOrderBy adds the orderBy to the get API timesheets params
func (o *GetAPITimesheetsParams) WithOrderBy(orderBy string) *GetAPITimesheetsParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the get API timesheets params
func (o *GetAPITimesheetsParams) SetOrderBy(orderBy string) {
	o.OrderBy = orderBy
}

// WithPage adds the page to the get API timesheets params
func (o *GetAPITimesheetsParams) WithPage(page string) *GetAPITimesheetsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get API timesheets params
func (o *GetAPITimesheetsParams) SetPage(page string) {
	o.Page = page
}

// WithProject adds the project to the get API timesheets params
func (o *GetAPITimesheetsParams) WithProject(project string) *GetAPITimesheetsParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the get API timesheets params
func (o *GetAPITimesheetsParams) SetProject(project string) {
	o.Project = project
}

// WithProjects adds the projects to the get API timesheets params
func (o *GetAPITimesheetsParams) WithProjects(projects string) *GetAPITimesheetsParams {
	o.SetProjects(projects)
	return o
}

// SetProjects adds the projects to the get API timesheets params
func (o *GetAPITimesheetsParams) SetProjects(projects string) {
	o.Projects = projects
}

// WithSize adds the size to the get API timesheets params
func (o *GetAPITimesheetsParams) WithSize(size string) *GetAPITimesheetsParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get API timesheets params
func (o *GetAPITimesheetsParams) SetSize(size string) {
	o.Size = size
}

// WithTags adds the tags to the get API timesheets params
func (o *GetAPITimesheetsParams) WithTags(tags string) *GetAPITimesheetsParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the get API timesheets params
func (o *GetAPITimesheetsParams) SetTags(tags string) {
	o.Tags = tags
}

// WithTerm adds the term to the get API timesheets params
func (o *GetAPITimesheetsParams) WithTerm(term *string) *GetAPITimesheetsParams {
	o.SetTerm(term)
	return o
}

// SetTerm adds the term to the get API timesheets params
func (o *GetAPITimesheetsParams) SetTerm(term *string) {
	o.Term = term
}

// WithUser adds the user to the get API timesheets params
func (o *GetAPITimesheetsParams) WithUser(user string) *GetAPITimesheetsParams {
	o.SetUser(user)
	return o
}

// SetUser adds the user to the get API timesheets params
func (o *GetAPITimesheetsParams) SetUser(user string) {
	o.User = user
}

// WriteToRequest writes these params to a swagger request
func (o *GetAPITimesheetsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param active
	qrActive := o.Active
	qActive := qrActive

	if err := r.SetQueryParam("active", qActive); err != nil {
		return err
	}

	// query param activities
	qrActivities := o.Activities
	qActivities := qrActivities

	if err := r.SetQueryParam("activities", qActivities); err != nil {
		return err
	}

	// query param activity
	qrActivity := o.Activity
	qActivity := qrActivity

	if err := r.SetQueryParam("activity", qActivity); err != nil {
		return err
	}

	// query param begin
	qrBegin := o.Begin
	qBegin := qrBegin

	if err := r.SetQueryParam("begin", qBegin); err != nil {
		return err
	}

	// query param billable
	qrBillable := o.Billable
	qBillable := qrBillable

	if err := r.SetQueryParam("billable", qBillable); err != nil {
		return err
	}

	// query param customer
	qrCustomer := o.Customer
	qCustomer := qrCustomer

	if err := r.SetQueryParam("customer", qCustomer); err != nil {
		return err
	}

	// query param customers
	qrCustomers := o.Customers
	qCustomers := qrCustomers

	if err := r.SetQueryParam("customers", qCustomers); err != nil {
		return err
	}

	// query param end
	qrEnd := o.End
	qEnd := qrEnd

	if err := r.SetQueryParam("end", qEnd); err != nil {
		return err
	}

	// query param exported
	qrExported := o.Exported
	qExported := qrExported

	if err := r.SetQueryParam("exported", qExported); err != nil {
		return err
	}

	// query param full
	qrFull := o.Full
	qFull := qrFull

	if err := r.SetQueryParam("full", qFull); err != nil {
		return err
	}

	// query param modified_after
	qrModifiedAfter := o.ModifiedAfter
	qModifiedAfter := qrModifiedAfter

	if err := r.SetQueryParam("modified_after", qModifiedAfter); err != nil {
		return err
	}

	// query param order
	qrOrder := o.Order
	qOrder := qrOrder

	if err := r.SetQueryParam("order", qOrder); err != nil {
		return err
	}

	// query param orderBy
	qrOrderBy := o.OrderBy
	qOrderBy := qrOrderBy

	if err := r.SetQueryParam("orderBy", qOrderBy); err != nil {
		return err
	}

	// query param page
	qrPage := o.Page
	qPage := qrPage

	if err := r.SetQueryParam("page", qPage); err != nil {
		return err
	}

	// query param project
	qrProject := o.Project
	qProject := qrProject

	if err := r.SetQueryParam("project", qProject); err != nil {
		return err
	}

	// query param projects
	qrProjects := o.Projects
	qProjects := qrProjects

	if err := r.SetQueryParam("projects", qProjects); err != nil {
		return err
	}

	// query param size
	qrSize := o.Size
	qSize := qrSize

	if err := r.SetQueryParam("size", qSize); err != nil {
		return err
	}

	// query param tags
	qrTags := o.Tags
	qTags := qrTags

	if err := r.SetQueryParam("tags", qTags); err != nil {
		return err
	}

	if o.Term != nil {

		// query param term
		var qrTerm string

		if o.Term != nil {
			qrTerm = *o.Term
		}
		qTerm := qrTerm
		if qTerm != "" {

			if err := r.SetQueryParam("term", qTerm); err != nil {
				return err
			}
		}
	}

	// query param user
	qrUser := o.User
	qUser := qrUser

	if err := r.SetQueryParam("user", qUser); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
