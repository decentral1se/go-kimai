// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostAPITeamsIDMembersUserIDParams creates a new PostAPITeamsIDMembersUserIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostAPITeamsIDMembersUserIDParams() *PostAPITeamsIDMembersUserIDParams {
	return &PostAPITeamsIDMembersUserIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostAPITeamsIDMembersUserIDParamsWithTimeout creates a new PostAPITeamsIDMembersUserIDParams object
// with the ability to set a timeout on a request.
func NewPostAPITeamsIDMembersUserIDParamsWithTimeout(timeout time.Duration) *PostAPITeamsIDMembersUserIDParams {
	return &PostAPITeamsIDMembersUserIDParams{
		timeout: timeout,
	}
}

// NewPostAPITeamsIDMembersUserIDParamsWithContext creates a new PostAPITeamsIDMembersUserIDParams object
// with the ability to set a context for a request.
func NewPostAPITeamsIDMembersUserIDParamsWithContext(ctx context.Context) *PostAPITeamsIDMembersUserIDParams {
	return &PostAPITeamsIDMembersUserIDParams{
		Context: ctx,
	}
}

// NewPostAPITeamsIDMembersUserIDParamsWithHTTPClient creates a new PostAPITeamsIDMembersUserIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostAPITeamsIDMembersUserIDParamsWithHTTPClient(client *http.Client) *PostAPITeamsIDMembersUserIDParams {
	return &PostAPITeamsIDMembersUserIDParams{
		HTTPClient: client,
	}
}

/*
PostAPITeamsIDMembersUserIDParams contains all the parameters to send to the API endpoint

	for the post API teams ID members user ID operation.

	Typically these are written to a http.Request.
*/
type PostAPITeamsIDMembersUserIDParams struct {

	/* ID.

	   The team which will receive the new member
	*/
	ID int64

	/* UserID.

	   The team member to add (User ID)
	*/
	UserID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post API teams ID members user ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAPITeamsIDMembersUserIDParams) WithDefaults() *PostAPITeamsIDMembersUserIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post API teams ID members user ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAPITeamsIDMembersUserIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post API teams ID members user ID params
func (o *PostAPITeamsIDMembersUserIDParams) WithTimeout(timeout time.Duration) *PostAPITeamsIDMembersUserIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post API teams ID members user ID params
func (o *PostAPITeamsIDMembersUserIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post API teams ID members user ID params
func (o *PostAPITeamsIDMembersUserIDParams) WithContext(ctx context.Context) *PostAPITeamsIDMembersUserIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post API teams ID members user ID params
func (o *PostAPITeamsIDMembersUserIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post API teams ID members user ID params
func (o *PostAPITeamsIDMembersUserIDParams) WithHTTPClient(client *http.Client) *PostAPITeamsIDMembersUserIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post API teams ID members user ID params
func (o *PostAPITeamsIDMembersUserIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the post API teams ID members user ID params
func (o *PostAPITeamsIDMembersUserIDParams) WithID(id int64) *PostAPITeamsIDMembersUserIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the post API teams ID members user ID params
func (o *PostAPITeamsIDMembersUserIDParams) SetID(id int64) {
	o.ID = id
}

// WithUserID adds the userID to the post API teams ID members user ID params
func (o *PostAPITeamsIDMembersUserIDParams) WithUserID(userID int64) *PostAPITeamsIDMembersUserIDParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the post API teams ID members user ID params
func (o *PostAPITeamsIDMembersUserIDParams) SetUserID(userID int64) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *PostAPITeamsIDMembersUserIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	// path param userId
	if err := r.SetPathParam("userId", swag.FormatInt64(o.UserID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
