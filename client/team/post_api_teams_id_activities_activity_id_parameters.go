// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostAPITeamsIDActivitiesActivityIDParams creates a new PostAPITeamsIDActivitiesActivityIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostAPITeamsIDActivitiesActivityIDParams() *PostAPITeamsIDActivitiesActivityIDParams {
	return &PostAPITeamsIDActivitiesActivityIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostAPITeamsIDActivitiesActivityIDParamsWithTimeout creates a new PostAPITeamsIDActivitiesActivityIDParams object
// with the ability to set a timeout on a request.
func NewPostAPITeamsIDActivitiesActivityIDParamsWithTimeout(timeout time.Duration) *PostAPITeamsIDActivitiesActivityIDParams {
	return &PostAPITeamsIDActivitiesActivityIDParams{
		timeout: timeout,
	}
}

// NewPostAPITeamsIDActivitiesActivityIDParamsWithContext creates a new PostAPITeamsIDActivitiesActivityIDParams object
// with the ability to set a context for a request.
func NewPostAPITeamsIDActivitiesActivityIDParamsWithContext(ctx context.Context) *PostAPITeamsIDActivitiesActivityIDParams {
	return &PostAPITeamsIDActivitiesActivityIDParams{
		Context: ctx,
	}
}

// NewPostAPITeamsIDActivitiesActivityIDParamsWithHTTPClient creates a new PostAPITeamsIDActivitiesActivityIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostAPITeamsIDActivitiesActivityIDParamsWithHTTPClient(client *http.Client) *PostAPITeamsIDActivitiesActivityIDParams {
	return &PostAPITeamsIDActivitiesActivityIDParams{
		HTTPClient: client,
	}
}

/*
PostAPITeamsIDActivitiesActivityIDParams contains all the parameters to send to the API endpoint

	for the post API teams ID activities activity ID operation.

	Typically these are written to a http.Request.
*/
type PostAPITeamsIDActivitiesActivityIDParams struct {

	/* ActivityID.

	   The activity to grant acecess to (Activity ID)
	*/
	ActivityID int64

	/* ID.

	   The team that is granted access
	*/
	ID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post API teams ID activities activity ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAPITeamsIDActivitiesActivityIDParams) WithDefaults() *PostAPITeamsIDActivitiesActivityIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post API teams ID activities activity ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAPITeamsIDActivitiesActivityIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post API teams ID activities activity ID params
func (o *PostAPITeamsIDActivitiesActivityIDParams) WithTimeout(timeout time.Duration) *PostAPITeamsIDActivitiesActivityIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post API teams ID activities activity ID params
func (o *PostAPITeamsIDActivitiesActivityIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post API teams ID activities activity ID params
func (o *PostAPITeamsIDActivitiesActivityIDParams) WithContext(ctx context.Context) *PostAPITeamsIDActivitiesActivityIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post API teams ID activities activity ID params
func (o *PostAPITeamsIDActivitiesActivityIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post API teams ID activities activity ID params
func (o *PostAPITeamsIDActivitiesActivityIDParams) WithHTTPClient(client *http.Client) *PostAPITeamsIDActivitiesActivityIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post API teams ID activities activity ID params
func (o *PostAPITeamsIDActivitiesActivityIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActivityID adds the activityID to the post API teams ID activities activity ID params
func (o *PostAPITeamsIDActivitiesActivityIDParams) WithActivityID(activityID int64) *PostAPITeamsIDActivitiesActivityIDParams {
	o.SetActivityID(activityID)
	return o
}

// SetActivityID adds the activityId to the post API teams ID activities activity ID params
func (o *PostAPITeamsIDActivitiesActivityIDParams) SetActivityID(activityID int64) {
	o.ActivityID = activityID
}

// WithID adds the id to the post API teams ID activities activity ID params
func (o *PostAPITeamsIDActivitiesActivityIDParams) WithID(id int64) *PostAPITeamsIDActivitiesActivityIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the post API teams ID activities activity ID params
func (o *PostAPITeamsIDActivitiesActivityIDParams) SetID(id int64) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *PostAPITeamsIDActivitiesActivityIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param activityId
	if err := r.SetPathParam("activityId", swag.FormatInt64(o.ActivityID)); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
